name: Django CI/CD

on:
  push:
    branches: [ "master" ]


jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest-cov
      - name: Run Migrations
        run: |
          python manage.py makemigrations
          python manage.py migrate
        env:
          DEBUG: "True"
          SECRET_KEY: "test-key-not-real"
          DB_NAME: "test_db"
          DB_USER: "test_user"
          DB_PASSWORD: "test_password"
          DB_HOST: "localhost"
          DB_PORT: "5432"
          ALLOWED_HOSTS: "localhost,127.0.0.1"
          DOC_TO_PDF_CONVERTER_URL: "DOC_TO_PDF_CONVERTER_URL"
      - name: Run Tests
        env:
          DEBUG: "True"
          SECRET_KEY: "test-key-not-real"
          DB_NAME: "test_db"
          DB_USER: "test_user"
          DB_PASSWORD: "test_password"
          DB_HOST: "localhost"
          DB_PORT: "5432"
          ALLOWED_HOSTS: "localhost,127.0.0.1"
          DOC_TO_PDF_CONVERTER_URL: "DOC_TO_PDF_CONVERTER_URL"
        run: |
          pytest --cov=./ --cov-report=xml


  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black isort

      - name: Run Linting
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # check code formatting
          black --check .
          # check import sorting
          isort --check-only --diff .

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bandit safety

      - name: Run Security Checks
        run: |
          bandit -r . -x ./tests,./venv
          safety check
