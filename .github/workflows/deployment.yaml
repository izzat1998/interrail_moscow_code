name: Django CI/CD

on:
  push:
    branches: [ "master" ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'  # Matching your mypy configuration

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest-cov django-stubs djangorestframework-stubs types-requests types-PyYAML

      - name: Run Migrations
        env:
          DEBUG: "True"
          SECRET_KEY: "test-key-not-real"
          DB_NAME: "test_db"
          DB_USER: "test_user"
          DB_PASSWORD: "test_password"
          DB_HOST: "localhost"
          DB_PORT: "5432"
          ALLOWED_HOSTS: "localhost,127.0.0.1"
          DOC_TO_PDF_CONVERTER_URL: "DOC_TO_PDF_CONVERTER_URL"
        run: |
          python manage.py makemigrations
          python manage.py migrate

      - name: Run Tests with Coverage
        env:
          DEBUG: "True"
          SECRET_KEY: "test-key-not-real"
          DB_NAME: "test_db"
          DB_USER: "test_user"
          DB_PASSWORD: "test_password"
          DB_HOST: "localhost"
          DB_PORT: "5432"
          ALLOWED_HOSTS: "localhost,127.0.0.1"
          DOC_TO_PDF_CONVERTER_URL: "DOC_TO_PDF_CONVERTER_URL"
        run: |
          pytest --cov=./ --cov-report=xml

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff mypy django-stubs djangorestframework-stubs types-requests types-PyYAML

      - name: Run Ruff Linting
        run: |
          ruff check .
          ruff format --check .

      - name: Run MyPy Type Checking
        run: |
          mypy . --exclude '(docs/|tests/|migrations/)' \
                 --python-version 3.12 \
                 --strict-optional \
                 --ignore-missing-imports

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bandit safety pre-commit pytest-django django django-environ


      - name: Run Security Checks
        run: |
          bandit -r . -ll -x ./tests,./venv
          safety check
